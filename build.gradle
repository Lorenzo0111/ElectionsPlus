/*
 * This file is part of ElectionsPlus, licensed under the MIT License.
 *
 * Copyright (c) Lorenzo0111
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
        classpath "io.github.slimjar:gradle-plugin:1.2.1"
    }
}

ext {
    libsBase = 'me.lorenzo0111.elections.libs'
}


subprojects {
    apply plugin: 'java'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: "io.github.slimjar"

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    compileJava.options.encoding = "UTF-8"
    compileTestJava.options.encoding = "UTF-8"

    version = "1.2"
    group = "me.lorenzo0111"

    repositories {
        mavenCentral()
        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/content/groups/public/'
        }
        maven { url 'https://jitpack.io' }
        maven { url 'https://repo.repsy.io/mvn/lorenzo0111/public'}
    }

    dependencies {
        implementation group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.2'
        implementation('org.spongepowered:configurate-yaml:4.1.1')
        slim("net.kyori:adventure-text-minimessage:4.1.0-SNAPSHOT")
        slim('net.kyori:adventure-api:4.8.1')
        slim('net.kyori:adventure-text-serializer-legacy:4.8.1')
        slim('mysql:mysql-connector-java:8.0.25')
        slim('org.xerial:sqlite-jdbc:3.36.0')
        slim('com.zaxxer:HikariCP:4.0.3')
    }

    shadowJar {
        relocate('org.yaml.snakeyaml',"${libsBase}.yaml")

        // Remove META-INF
        exclude 'META-INF', 'META-INF/**'
    }

    slimJar {
        relocate('org.bstats', "${libsBase}.bstats")
        relocate('dev.triumphteam',"${libsBase}")
        relocate('google',"${libsBase}.google")
        relocate('org.slf4j',"${libsBase}.slf4j")
        relocate('org.sqlite.native',"${libsBase}.jdbc.sqlite")
        relocate('com.cryptomorin.xseries',"${libsBase}.xseries")
        relocate('com.zaxxer.hikari',"${libsBase}.hikari")
    }

    processResources {
        from(project.sourceSets.main.resources.srcDirs) {
            duplicatesStrategy DuplicatesStrategy.INCLUDE
            filter ReplaceTokens, tokens: [version: version]
        }
    }
}